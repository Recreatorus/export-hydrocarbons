const dimensions={width:600,height:200,marginTop:8},xAccessor=t=>t.date,yAccessor=t=>t.value,formatDate=d3.timeFormat("%Y-%m-%d"),getText=(t,e)=>{const i=xAccessor(e);return`${formatDate(i)}`},draw=t=>{const e=d3.select("[data-wrapper]").select("[data-chart]").append("svg").attr("width",dimensions.width).attr("height",dimensions.height).attr("viewBox",`0 0 ${dimensions.width} ${dimensions.height}`),i=d3.extent(t,xAccessor),s=[0,d3.max(t,yAccessor)],a=d3.scaleTime().domain(i).range([0,dimensions.width]),n=d3.scaleLinear().domain(s).range([dimensions.height,dimensions.marginTop]),o=d3.area().x((t=>a(xAccessor(t)))).y1((t=>n(yAccessor(t)))).y0(dimensions.height).curve(d3.curveBumpX),r=(e.append("path").datum(t).attr("d",o).attr("fill","var(--fill)"),d3.line().x((t=>a(xAccessor(t)))).y((t=>n(yAccessor(t)))).curve(d3.curveBumpX)),c=(e.append("path").datum(t).attr("d",r).attr("stroke","var(--stroke)").attr("stroke-width",2).attr("stroke-linejoin","round").attr("fill","none"),e.append("line").attr("x1",0).attr("x2",0).attr("y1",0).attr("y2",dimensions.height).attr("stroke-width",2).attr("stroke","var(--marker, var(--stroke))").attr("opacity",0)),d=e.append("circle").attr("cx",0).attr("cy",0).attr("r",8).attr("fill","var(--marker, var(--stroke))").attr("opacity",0),h=d3.bisector(xAccessor);e.on("mousemove",(e=>{const[i,s]=d3.pointer(e),o=a.invert(i),r=h.center(t,o),l=t[r],m=a(xAccessor(l)),p=n(yAccessor(l));c.attr("x1",m).attr("x2",m).attr("opacity",1),d.attr("cx",m).attr("cy",p).attr("opacity",1),d3.select("[data-heading]").text(getText(0,l).substring(0,4)),d3.select("[data-total]").text(yAccessor(l)+" $млрд")})),e.on("mouseleave",(()=>{const e=t[t.length-1];c.attr("opacity",0),d.attr("opacity",0),d3.select("[data-total]").text(yAccessor(e)+" $млрд")}))},sortData=t=>t.map((t=>({...t,date:new Date(t.date)}))).sort(((t,e)=>d3.ascending(t.date,e.date))),clear=t=>{d3.select("[data-chart]").selectAll("*").remove()},inputs=d3.selectAll('input[type="radio"]'),colors=inputs.nodes().map((t=>t.value));d3.json("./data/gas.json").then((t=>{const e=sortData(t);draw(e),document.querySelector("#sumExport").textContent=t.reduce(((t,e)=>t+e.value),0).toFixed(1)})).catch((t=>console.log(t))),d3.select(".controls-list").on("click",(t=>{const{value:e,checked:i}=t.target;e&&i&&(prod=t.target.dataset.prod,window.navigator.vibrate(200),d3.json(`./data/${prod}.json`).then((t=>{d3.select("[data-chart]").selectAll("*").remove();const e=sortData(t);draw(e),document.querySelector("#sumExport").textContent=t.reduce(((t,e)=>t+e.value),0).toFixed(1)})).catch((t=>console.log(t))),document.body.classList.remove(...colors),document.body.classList.add(e))}));class Accordion{constructor(t){this.el=t,this.summary=t.querySelector("summary"),this.content=t.querySelector(".content"),this.animation=null,this.isClosing=!1,this.isExpanding=!1,this.summary.addEventListener("click",(t=>this.onClick(t)))}onClick(t){t.preventDefault(),this.el.style.overflow="hidden",this.isClosing||!this.el.open?this.open():(this.isExpanding||this.el.open)&&this.shrink()}shrink(){this.isClosing=!0;const t=`${this.el.offsetHeight}px`,e=`${this.summary.offsetHeight}px`;this.animation&&this.animation.cancel(),this.animation=this.el.animate({height:[t,e]},{duration:300,easing:"ease-out"}),this.animation.onfinish=()=>this.onAnimationFinish(!1),this.animation.oncancel=()=>this.isClosing=!1}open(){this.el.style.height=`${this.el.offsetHeight}px`,this.el.open=!0,window.requestAnimationFrame((()=>this.expand()))}expand(){this.isExpanding=!0;const t=`${this.el.offsetHeight}px`,e=`${this.summary.offsetHeight+this.content.offsetHeight}px`;this.animation&&this.animation.cancel(),this.animation=this.el.animate({height:[t,e]},{duration:300,easing:"ease-out"}),this.animation.onfinish=()=>this.onAnimationFinish(!0),this.animation.oncancel=()=>this.isExpanding=!1}onAnimationFinish(t){this.el.open=t,this.animation=null,this.isClosing=!1,this.isExpanding=!1,this.el.style.height=this.el.style.overflow=""}}document.querySelectorAll("details").forEach((t=>{new Accordion(t)}));
